
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Sarthak Agrawal
 */
public class register extends javax.swing.JFrame {

    /**
     * Creates new form register
     */
    public register() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbsp = new javax.swing.JCheckBox();
        cbrobot = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        txtpassword1 = new javax.swing.JPasswordField();
        txtpassword = new javax.swing.JPasswordField();
        txtusername = new javax.swing.JTextField();
        txtcheck = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Euphemia UCAS", 0, 18)); // NOI18N
        jLabel1.setText("ENTER A USERNAME:");

        jLabel2.setFont(new java.awt.Font("Euphemia UCAS", 0, 18)); // NOI18N
        jLabel2.setText("ENTER YOUR PASSWORD:");

        jLabel3.setFont(new java.awt.Font("Euphemia UCAS", 0, 18)); // NOI18N
        jLabel3.setText("ENTER PASSWORD AGAIN:");

        cbsp.setFont(new java.awt.Font("Lucida Fax", 0, 14)); // NOI18N
        cbsp.setText("show password");
        cbsp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbspActionPerformed(evt);
            }
        });

        cbrobot.setFont(new java.awt.Font("Lucida Fax", 0, 14)); // NOI18N
        cbrobot.setText("I am not a Robot");

        jButton1.setBackground(new java.awt.Color(51, 153, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("REGISTER ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btn2.setBackground(new java.awt.Color(51, 153, 255));
        btn2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn2.setForeground(new java.awt.Color(255, 255, 255));
        btn2.setText("BACK");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        txtpassword1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtpassword.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtusername.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtcheck.setEditable(false);
        txtcheck.setBorder(null);
        txtcheck.setOpaque(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jButton1)
                        .addGap(28, 28, 28)
                        .addComponent(txtcheck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(btn2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(cbrobot))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbsp)
                            .addComponent(txtpassword1)
                            .addComponent(txtpassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                            .addComponent(txtusername))))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btn2, jButton1});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtusername, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(cbsp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtpassword1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(cbrobot)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn2)
                    .addComponent(txtcheck, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btn2, jButton1});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtpassword, txtpassword1, txtusername});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         int check;
        String check1 = txtcheck.getText();
        if(check1.isEmpty())
        {
            check = 3;
        }
        else{
            check = Integer.parseInt(txtcheck.getText());
        }
        if(check>0){
            if(cbrobot.isSelected()){
                String username, password, password_check;
                username = txtusername.getText();
                password = new String(txtpassword.getPassword());
                password_check = new String(txtpassword1.getPassword());
                if(username.isEmpty() || password.isEmpty() || password_check.isEmpty()){
                    JOptionPane.showMessageDialog(null,"incomplete information!");
                    cbrobot.setSelected(false);
                }
                else{
                    if(password_check.equals(password))
                    {
                        try
                        {
                            Class.forName("java.sql.DriverManager");
                            Connection con =(Connection)
                            DriverManager.getConnection
                            ("jdbc:mysql://localhost:3306/sound_player", "root", "sarthak");
                            Statement stmt = (Statement) con.createStatement();
                            String query="SELECT username FROM users WHERE username = '"+username+"';";
                            ResultSet rs=stmt.executeQuery(query);
                            if(rs.next())
                            {
                                JOptionPane.showMessageDialog(null,"This username already exists, kindly choose a different username.");
                            }
                            else
                            {
                                int lengthu = username.length();
                                int lengthp = password.length();
                                if(lengthu<20 && lengthp<20 ){
                                    try
                                    {
                                        int s_no1 = 0;
                                        Class.forName("java.sql.DriverManager");
                                        java.sql.Connection con0 =(java.sql.Connection)
                                                        DriverManager.getConnection
                                                        ("jdbc:mysql://localhost:3306/sound_player", "root", "sarthak");
                                        Statement stmt0 = con0.createStatement();
                                        String query0="select max(s_no) from users;";
                                        ResultSet rs0 = stmt0.executeQuery(query0);
                                        if(rs.next())
                                            s_no1 = Integer.parseInt(rs.getString("max(s_no)"));
                                        else
                                          //  JOptionPane.showMessageDialog(null,"couldn't retrieve previous max s.no");
                                        System.out.println(s_no1);
                                        ++s_no1;
                                        Class.forName("java.sql.DriverManager");
                                        Connection con2 =(Connection)
                                        DriverManager.getConnection
                                        ("jdbc:mysql://localhost:3306/sound_player", "root", "sarthak");
                                        Statement stmt2 = (Statement) con2.createStatement();
                                        String query2="INSERT INTO users VALUES('"+username+"','"+password+"','data"+(++s_no1)+"','"+s_no1+"');";
                                        stmt2.executeUpdate(query2);
                                        
                                        Class.forName("java.sql.DriverManager");
                                        Connection con3 = (Connection) DriverManager.getConnection
                                                ("jdbc:mysql://localhost:3306/sound_player","root","sarthak");
                                        Statement stmt3 = (Statement) con3.createStatement();
                                        String query3 = "Create table data"+(s_no1)+"(song_name varchar(100), location varchar(200), author varchar(100), s_no int(100));";
                                        stmt3.executeUpdate(query3);
                                        
                                        JOptionPane.showMessageDialog(null,"Registration has been successful!");
                                        new login().setVisible(true);
                                        register.this.setVisible(false);    
                                    }
                                    catch(Exception e2)
                                    {
                                        JOptionPane.showMessageDialog(this,e2.getMessage());
                                    }}
                                    else{
                                        JOptionPane.showMessageDialog(null,"username or password cannot exceed 20 characters");
                                    }
                                }
                            }
                            catch(Exception e)
                            {
                                JOptionPane.showMessageDialog(null,e.getMessage());
                            }
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(null,"The two passwords entered do not match!");
                            txtpassword.setText("");
                            txtpassword1.setText("");
                        }
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null,"Robot check not performed");
                    txtusername.setText("");
                    txtpassword.setText("");
                    txtpassword1.setText("");
                    --check;
                    txtcheck.setText(""+check);
                }
            }
            else{
                JOptionPane.showMessageDialog(null,"Since robot check has not been performed more \n than 3 times in a row, application is exiting.");
                System.exit(0);
            }
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        new login().setVisible(true);
        register.this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        // TODO add your handling code here:
        new login().setVisible(true);
        register.this.dispose();
    }//GEN-LAST:event_btn2ActionPerformed

    private void cbspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbspActionPerformed
        // TODO add your handling code here:
        if(cbsp.isSelected())
        {
            txtpassword.setEchoChar((char)0);
        }
        else
        {
            txtpassword.setEchoChar('*');
        }
    }//GEN-LAST:event_cbspActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new register().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn2;
    private javax.swing.JCheckBox cbrobot;
    private javax.swing.JCheckBox cbsp;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtcheck;
    private javax.swing.JPasswordField txtpassword;
    private javax.swing.JPasswordField txtpassword1;
    private javax.swing.JTextField txtusername;
    // End of variables declaration//GEN-END:variables
}
